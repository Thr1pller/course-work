import tkinter as tk
from tkcalendar import Calendar
from tkinter import messagebox
from datetime import datetime
import json
import os

calendar_file = "calendar_data.json"

# –Ø–∫—â–æ —Ñ–∞–π–ª —ñ—Å–Ω—É—î ‚Äî –∑–∞–≤–∞–Ω—Ç–∞–∂—É—î–º–æ
if os.path.exists(calendar_file):
    with open(calendar_file, "r", encoding="utf-8") as f:
        calendar_events = json.load(f)
else:
    calendar_events = {}

def open_calendar_window():
    root = tk.Tk()
    root.title("–ü–ª–∞–Ω—É–≤–∞–Ω–Ω—è –ø—Ä–∏–≥–æ—Ç—É–≤–∞–Ω–Ω—è")
    root.geometry("420x450")

    cal = Calendar(root, selectmode="day", date_pattern="yyyy-mm-dd")
    cal.pack(pady=10)

    # –í–∏–±—ñ—Ä —Ç–∏–ø—É –ø—Ä–∏–π–æ–º—É —ó–∂—ñ
    tk.Label(root, text="–¢–∏–ø –ø—Ä–∏–π–æ–º—É —ó–∂—ñ:").pack(pady=(10, 2))

    meal_options = ["–°–Ω—ñ–¥–∞–Ω–æ–∫", "–û–±—ñ–¥", "–í–µ—á–µ—Ä—è"]
    meal_var = tk.StringVar(root)
    meal_var.set("–û–±—ñ–¥")

    meal_menu = tk.OptionMenu(root, meal_var, *meal_options)
    meal_menu.config(width=20)
    meal_menu.pack(pady=5)

    def show_event():
        date = cal.get_date()
        meal = meal_var.get()

        # –û–ù–û–í–õ–ï–ù–ù–Ø: –∑—á–∏—Ç—É–≤–∞–Ω–Ω—è –∞–∫—Ç—É–∞–ª—å–Ω–∏—Ö –¥–∞–Ω–∏—Ö
        if os.path.exists(calendar_file):
            with open(calendar_file, "r", encoding="utf-8") as f:
                calendar_events = json.load(f)
        else:
            calendar_events = {}

        if date not in calendar_events or meal not in calendar_events[date]:
            messagebox.showinfo("–ü–æ—Ä–æ–∂–Ω—å–æ", "–ù–∞ —Ü—é –¥–∞—Ç—É –Ω—ñ—á–æ–≥–æ –Ω–µ –∑–∞–ø–ª–∞–Ω–æ–≤–∞–Ω–æ.")
            return

        entries = calendar_events[date][meal]
        if not isinstance(entries, list):
            entries = [entries]

        msg = f"üìÖ {date} ‚Äî {meal}:\n\n"
        for item in entries:
            if isinstance(item, dict) and "time" in item and "text" in item:
                msg += f"{item['time']}: {item['text']}\n"
            else:
                msg += f"‚Ä¢ {item}\n"

        messagebox.showinfo("–ó–∞–ø–ª–∞–Ω–æ–≤–∞–Ω–µ", msg)

    tk.Button(root, text="–ü–µ—Ä–µ–≥–ª—è–Ω—É—Ç–∏", command=show_event).pack()

    root.mainloop()
